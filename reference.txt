Stolen from an unauthored python script

# Usb identification
VENDOR  = 0x0471
PRODUCT = 0x083f

# Endpoints
EP_IN = 0x81
EP_OUT = 0x02
EP_PNP = 0x83

# Packet start
PKT_HEADER = 0xA1

# -- Commands --


# Set a single color, for a specific light
# Params 0xRR 0xGG 0xBB
# 0xRR = Red color
# 0xGG = Green color
# 0xBB = Blue color
SET_LIGHT_COLOR = 0x03

# Set a color sequence using delays
# Params 0xMM 0xMM then a repeated sequence of 0xRR 0xGG 0xBB
# 0xMM = milliseconds
# 0xMM = milliseconds
# 0xRR = Red color
# 0xGG = Green color
# 0xBB = Blue color
SET_TIMED_COLOR_SEQUENCE = 0x72



-----------------------


def _init_hw(self):
        self._log.debug("Opening device")
        self._dev = self._devptr.open()
        self._log.debug("Claiming interface 0")
        self._dev.claimInterface(0)
        self._log.debug("Initialisation succesful")

    def write(self, data, timeout=TIMEOUT_LIBUSBW):
        '''Write command data to device'''
        return self._dev.interruptWrite(EP_OUT, data, timeout)

    def set_color_rgb8(self, light, color):
        '''Set light color'''
        self.write(B([PKT_HEADER, light, SET_LIGHT_COLOR, color[0], color[1], color[2]]))
        
    def set_color_float(self, light, color):
        self.set_color_rgb8(light, float_to_rgb8(color))

    def set_sequence_rgb8(self, light, millis, colors):
        '''Set light color sequence'''
        assert(millis >= 0 and millis <= 0xffff)
        assert(len(colors) == 16) # must be 16 colors
        pkt = [PKT_HEADER, light, SET_TIMED_COLOR_SEQUENCE, millis >> 8, millis & 255]
        for color in colors:
            assert(len(color) == 3)
            pkt.extend(color)
        self.write(B(pkt))
        
    def set_sequence_float(self, light, millis, colors):
        self.set_sequence_rgb8(light, millis, [float_to_rgb8(color) for color in colors])